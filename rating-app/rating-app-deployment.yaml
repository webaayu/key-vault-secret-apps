apiVersion: apps/v1
kind: Deployment
metadata:
  name: rating-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rating-app
  template:
    metadata:
      labels:
        app: rating-app
    spec:
      containers:
      - name: rating-app
        image: pratikshahp/rating-app:latest # cloudyugacontregistry.azurecr.io/rating-app:latest
        ports:
        - containerPort: 5000
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          value: postgres-service # Ensure this is the correct service name for PostgreSQL in the cluster
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-keyvault-secrets-postgres" 
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: rating-app
  namespace: default
spec:
  selector:
    app: rating-app
  ports:
    - protocol: TCP
      port: 80         # The port exposed externally
      targetPort: 5000 # The port that the rating-app container is listening on
  type: LoadBalancer   # Exposing the app through a LoadBalancer (for external access)
